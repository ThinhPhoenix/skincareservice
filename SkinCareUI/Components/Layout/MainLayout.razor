@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@using SkinCareRepository
@inject ICustomerRepository customerRepo
<div class="page bg-gradient-to-b from-pink-100 to-white min-h-screen">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 justify-between">
            
            <div class="flex items-center">
                @if (isAuthenticated)
                {
                    <div class="flex items-center mr-4">
                        <span class="flex items-center text-gray-700">
                            <i class="fas fa-user-circle mr-2"></i>
                            @if (!string.IsNullOrEmpty(username))
                            {
                                <span>Xin chào, <span class="font-medium ml-1">@username</span></span>
                            }
                            else
                            {
                                <span>Xin chào</span>
                            }
                        </span>
                    </div>
                    <button @onclick="LogoutUser" class="bg-pink-500 hover:bg-pink-600 text-white px-3 py-1 rounded-md transition-colors flex items-center">
                        <i class="fas fa-sign-out-alt mr-1"></i> Đăng xuất
                    </button>
                }
                else
                {
                    <a href="/signin" class="bg-pink-500 hover:bg-pink-600 text-white px-3 py-1 rounded-md transition-colors flex items-center mr-2">
                        <i class="fas fa-sign-in-alt mr-1"></i> Đăng nhập
                    </a>
                    <a href="/signup" class="bg-white border border-pink-500 text-pink-500 hover:bg-pink-50 px-3 py-1 rounded-md transition-colors flex items-center">
                        <i class="fas fa-user-plus mr-1"></i> Đăng ký
                    </a>
                }
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    Đã xảy ra lỗi không xử lý được.
    <a href="" class="reload">Tải lại</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool isLoading = true;
    private bool isAuthenticated = false;
    private string username = string.Empty;
    private string userEmail = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthenticationStatus();
    }

    private async Task CheckAuthenticationStatus()
    {
        try
        {
            isLoading = true;
            userEmail = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "email");
            
            // Check authentication based on email
            isAuthenticated = !string.IsNullOrEmpty(userEmail);
            
            if (isAuthenticated)
            {
                var accountId = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "accountId");
                if (!string.IsNullOrEmpty(accountId))
                {
                    var customer = customerRepo.GetCustomerByUserId(accountId);
                    if (customer != null)
                    {
                        username = $"{customer.FirstName} {customer.LastName}".Trim();
                    }
                }
            }
            else
            {
                username = string.Empty;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"CheckAuthenticationStatus error: {ex.Message}");
            isAuthenticated = false;
            username = string.Empty;
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LogoutUser()
    {
        try
        {
            // Sử dụng localStorage API trực tiếp thay vì eval
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "email");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "role");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "accountId");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "isAdmin");
            
            isAuthenticated = false;
            username = string.Empty;
            
            // Chuyển hướng về trang đăng nhập
            NavigationManager.NavigateTo("/signin");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Logout error: {ex.Message}");
        }
    }
}