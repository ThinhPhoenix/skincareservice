@page "/user/payments"
@using SkinCareBussinessObject
@using SkinCareRepository
@using Microsoft.JSInterop
@inject IPaymentRepository PaymentRepository
@inject IAppointmentRepository AppointmentRepository
@inject ICustomerRepository CustomerRepository
@inject IServiceRepository ServiceRepository
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>Lịch Sử Thanh Toán | SkinCare Spa</PageTitle>

<div class="min-h-screen py-8">
    <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">
            <div class="mb-6 text-center">
                <h2 class="text-3xl font-bold text-gray-800">Lịch Sử Thanh Toán</h2>
                <p class="text-gray-600 mt-2">Theo dõi các giao dịch thanh toán của bạn</p>
            </div>

            @if (errorMessage != null)
            {
                <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded-lg">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <i class="fas fa-exclamation-circle text-red-500 text-xl"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-red-700">@errorMessage</p>
                        </div>
                    </div>
                </div>
            }

            @if (loading)
            {
                <div class="flex justify-center items-center py-12">
                    <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-pink-500"></div>
                </div>
            }
            else if (payments == null || !payments.Any())
            {
                <div class="bg-white rounded-xl shadow-md p-8 text-center">
                    <div class="flex flex-col items-center">
                        <div class="bg-blue-50 p-4 rounded-full mb-4">
                            <i class="fas fa-receipt text-blue-500 text-3xl"></i>
                        </div>
                        <h3 class="text-xl font-semibold text-gray-800 mb-2">Chưa có giao dịch thanh toán</h3>
                        <p class="text-gray-600 mb-6">Bạn chưa có giao dịch thanh toán nào trong hệ thống.</p>
                        <button @onclick="GoToServices" class="px-6 py-3 bg-pink-500 text-white rounded-lg shadow hover:bg-pink-600 transition flex items-center">
                            <i class="fas fa-spa mr-2"></i> Đặt Dịch Vụ Ngay
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="bg-white rounded-xl shadow-md overflow-hidden">
                    <div class="p-4 border-b border-gray-200 bg-gray-50">
                        <h3 class="text-lg font-semibold text-gray-700">
                            <i class="fas fa-list-alt mr-2"></i> Tổng cộng: @payments.Count giao dịch
                        </h3>
                    </div>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Mã giao dịch
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Mã lịch hẹn
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Ngày thanh toán
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Số tiền
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Phương thức
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Trạng thái
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Ghi chú
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @foreach (var payment in payments)
                                {
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-mono">
                                            @payment.Id
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-mono">
                                            @payment.AppointmentId
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="text-sm text-gray-900">@payment.PaymentDateTime.ToString("dd/MM/yyyy")</div>
                                            <div class="text-sm text-gray-500">@payment.PaymentDateTime.ToString("HH:mm")</div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="text-sm font-medium text-pink-600">@FormatCurrency(payment.Amount)</div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                            @GetPaymentMethodDisplay(payment.PaymentMethod)
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            @if (payment.PaymentStatus == "Paid")
                                            {
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                    Đã thanh toán
                                                </span>
                                            }
                                            else if (payment.PaymentStatus == "Pending")
                                            {
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                                                    Chờ thanh toán
                                                </span>
                                            }
                                            else if (payment.PaymentStatus == "Failed")
                                            {
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                                    Thanh toán thất bại
                                                </span>
                                            }
                                            else if (payment.PaymentStatus == "Refunded")
                                            {
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                                    Đã hoàn tiền
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                                    @payment.PaymentStatus
                                                </span>
                                            }
                                        </td>
                                        <td class="px-6 py-4 whitespace-normal text-sm text-gray-500 max-w-xs truncate">
                                            @payment.TransactionReference
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Payment> payments;
    private string customerId;
    private string accountId;
    private string errorMessage;
    private string debugInfo;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            loading = true;
            
            var debug = new System.Text.StringBuilder();
            
            // Get user ID from local storage
            accountId = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "accountId");
            debug.AppendLine($"AccountId from localStorage: '{accountId}'");
            
            if (string.IsNullOrEmpty(accountId))
            {
                errorMessage = "Bạn cần đăng nhập để xem lịch sử thanh toán.";
                NavigationManager.NavigateTo("/signin");
                return;
            }

            // Get customer ID using the account ID
            var customer = CustomerRepository.GetCustomerByUserId(accountId);
            if (customer == null)
            {
                errorMessage = "Không tìm thấy thông tin khách hàng cho tài khoản của bạn.";
                return;
            }
            
            customerId = customer.Id;
            debug.AppendLine($"Found customerId: '{customerId}'");
            
            // Get all appointments for this customer
            var appointments = AppointmentRepository.GetAppointmentsByCustomerId(customerId);
            debug.AppendLine($"Retrieved {appointments?.Count ?? 0} appointments for customer");
            
            // Get payments for these appointments
            if (appointments != null && appointments.Any())
            {
                payments = new List<Payment>();
                
                foreach (var appointment in appointments)
                {
                    // Get payment for this appointment
                    var payment = PaymentRepository.GetByAppointmentId(appointment.Id);
                    if (payment != null)
                    {
                        debug.AppendLine($"Payment found for appointment {appointment.Id}: Status={payment.PaymentStatus}, Method={payment.PaymentMethod}");
                        payments.Add(payment);
                    }
                    else
                    {
                        debug.AppendLine($"No payment found for appointment {appointment.Id}");
                    }
                }
                
                // Sort payments by date (newest first)
                payments = payments.OrderByDescending(p => p.PaymentDateTime).ToList();
            }
            
            // Set debug info
            debugInfo = debug.ToString();
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải lịch sử thanh toán: {ex.Message}";
            debugInfo = $"Exception: {ex.Message}\n";
            if (ex.InnerException != null)
            {
                debugInfo += $"Inner exception: {ex.InnerException.Message}";
            }
        }
        finally
        {
            loading = false;
        }
    }

    private string FormatCurrency(decimal amount)
    {
        return string.Format("{0:#,##0} VNĐ", amount).Replace(",", ".");
    }

    private string GetPaymentMethodDisplay(string method)
    {
        if (string.IsNullOrEmpty(method))
            return "Không xác định";
            
        return method switch
        {
            "Cash" => "Tiền mặt",
            "BankTransfer" => "Chuyển khoản",
            "Credit" => "Thẻ tín dụng",
            "Debit" => "Thẻ ghi nợ",
            "Momo" => "Ví MoMo",
            "ZaloPay" => "ZaloPay",
            _ => method
        };
    }

    private void GoToServices()
    {
        NavigationManager.NavigateTo("/services");
    }
}
