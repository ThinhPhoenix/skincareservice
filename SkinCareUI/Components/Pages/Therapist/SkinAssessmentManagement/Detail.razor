@page "/therapist/skinassessments/details/{assessmentId}"
@using SkinCareBussinessObject
@using SkinCareRepository
@inject ISkinAssesmentRepository SkinAssessmentRepository
@inject IAssessmentQuestionRepository QuestionRepository
@inject IAssessmentResponseRepository AssessmentResponseRepository
@inject IAssesmentOptionsRepository OptionsRepository

<PageTitle>Skin Assessment Details</PageTitle>

<div class="container py-4">
    <div class="row mb-4">
        <div class="col">
            <h2 class="text-pink-500 fw-bold">Chi Tiết Đánh Giá Da</h2>
        </div>
    </div>

    @if (IsLoading)
    {
        <div class="text-center my-5 py-5">
            <div class="spinner-border" style="width: 3rem; height: 3rem; color: #db2777;" role="status">
                <span class="visually-hidden">Đang tải...</span>
            </div>
            <p class="mt-3 fw-bold" style="color: #db2777;">Đang tải thông tin đánh giá...</p>
        </div>
    }
    else if (SkinAssessment == null)
    {
        <div class="alert alert-danger alert-dismissible fade show rounded-3 shadow-sm" role="alert">
            <strong><i class="bi bi-exclamation-triangle-fill me-2"></i>Lỗi!</strong> Không tìm thấy đánh giá da.
        </div>
    }
    else
    {
        <div class="card shadow rounded-4 border-0 mb-4">
            <div class="card-header text-white rounded-top-4 py-3" style="background-color: #db2777;">
                <h4 class="mb-0 fw-bold"><i class="bi bi-clipboard-data me-2"></i>Thông Tin Cơ Bản Về Da</h4>
            </div>
            <div class="card-body p-4" style="background-color: #fdf2f8;">
                <div class="mb-4">
                    <label class="form-label fw-bold">Loại Da</label>
                    <p class="form-control-plaintext">@SkinAssessment.SkinType</p>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-bold">Vấn Đề Da</label>
                    <p class="form-control-plaintext">@SkinAssessment.Concerns</p>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-bold">Dị Ứng</label>
                    <p class="form-control-plaintext">@SkinAssessment.Allergies</p>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-bold">Sản Phẩm Hiện Tại</label>
                    <p class="form-control-plaintext">@SkinAssessment.ProductsUsed</p>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-bold">Thuốc Đang Sử Dụng</label>
                    <p class="form-control-plaintext">@SkinAssessment.Medications</p>
                </div>
            </div>
        </div>

        <div class="card shadow rounded-4 border-0 mb-4">
            <div class="card-header text-white rounded-top-4 py-3" style="background-color: #db2777;">
                <h4 class="mb-0 fw-bold"><i class="bi bi-question-circle me-2"></i>Câu Hỏi Đánh Giá</h4>
            </div>
            <div class="card-body p-4" style="background-color: #fdf2f8;">
                @if (Questions == null || !Questions.Any())
                {
                    <div class="alert alert-info rounded-3 shadow-sm">
                        <i class="bi bi-info-circle-fill me-2"></i>Hiện tại không có câu hỏi đánh giá.
                    </div>
                }
                else
                {
                    <div id="assessmentQuestions">
                        @for (int i = 0; i < Questions.Count; i++)
                        {
                            var question = Questions[i];
                            var questionIndex = i;

                            <div class="card mb-4 border-0 shadow-sm rounded-4 bg-white">
                                <div class="card-header border-0 rounded-top-4" style="background-color: #fdf2f8;">
                                    <h5 class="mb-0 fw-bold" style="color: #db2777;">Câu hỏi @(i + 1): @question.QuestionText</h5>
                                </div>
                                <div class="card-body p-4">
                                    @if (QuestionOptions.ContainsKey(question.Id) && QuestionOptions[question.Id].Any())
                                    {
                                        <div class="options-container">
                                            @foreach (var option in QuestionOptions[question.Id].OrderBy(o => o.DisplayOrder))
                                            {
                                                <div class="form-check custom-radio-container mb-3">
                                                    <input class="form-check-input custom-radio" type="radio"
                                                           name="question-@question.Id"
                                                           id="option-@option.Id"
                                                           checked="@(Responses.ContainsKey(question.Id) && Responses[question.Id] == option.Id)"
                                                           disabled />
                                                    <label class="form-check-label ps-2" for="option-@option.Id">
                                                        @option.OptionText
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="text-danger"><i class="bi bi-exclamation-circle me-2"></i>Không có tùy chọn cho câu hỏi này.</p>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }
</div>

<style>
    .custom-radio-container {
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        padding: 12px 16px;
        transition: all 0.2s ease;
    }

    .custom-radio-container:hover {
        background-color: #fdf2f8;
        border-color: #db2777;
    }

    input[type="radio"]:checked + label {
        font-weight: bold;
        color: #db2777;
    }

    input[type="radio"]:checked + .custom-radio-container {
        border-color: #db2777;
        background-color: #fdf2f8;
    }

    .form-control:focus, .form-select:focus {
        border-color: #db2777;
        box-shadow: 0 0 0 0.25rem rgba(219, 39, 119, 0.25);
    }

    .btn:disabled {
        background-color: #f472b6 !important;
        border-color: #f472b6 !important;
    }
</style>

@code {
    [Parameter]
    public string AssessmentId { get; set; }

    private SkinAssessment SkinAssessment { get; set; }
    private List<AssessmentQuestion> Questions { get; set; } = new List<AssessmentQuestion>();
    private Dictionary<string, List<AssessmentOption>> QuestionOptions { get; set; } = new Dictionary<string, List<AssessmentOption>>();
    private Dictionary<string, string> Responses { get; set; } = new Dictionary<string, string>();
    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;

            // Fetch the skin assessment
            SkinAssessment = SkinAssessmentRepository.GetOne(AssessmentId);

            if (SkinAssessment == null)
            {
                return;
            }

            // Fetch the questions
            Questions = QuestionRepository.GetAssessmentQuestions();

            // Fetch the options for each question
            foreach (var question in Questions)
            {
                var options = OptionsRepository.GetOptionsByQuestionId(question.Id);
                QuestionOptions[question.Id] = options;
            }

            // Fetch the responses for the assessment
            var assessmentResponses = AssessmentResponseRepository.GetResponsesByAssessmentId(AssessmentId);
            foreach (var response in assessmentResponses)
            {
                Responses[response.QuestionId] = response.OptionId;
            }
        }
        finally
        {
            IsLoading = false;
        }
    }
}