@page "/staff/therapist/{Id}"
@using SkinCareBussinessObject
@using SkinCareRepository
@inject ITherapistRepository TherapistRepository
@inject IServiceRepository ServiceRepository
@inject ITherapistExpertiseRepository TherapistExpertiseRepository
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>Chi Tiết Chuyên Viên | SkinCare Spa</PageTitle>

<div class="min-h-screen bg-gradient-to-b from-white to-pink-50 py-8">
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center mb-6">
            <div class="flex items-center">
                <button @onclick="GoBack" class="mr-4 text-gray-600 hover:text-pink-600 transition rounded-full hover:bg-white p-2">
                    <i class="fas fa-arrow-left text-xl"></i>
                </button>
                <h1 class="text-3xl font-bold text-pink-600">Chi Tiết Chuyên Viên</h1>
            </div>
            
            <div class="flex space-x-3">
                <a href="/staff/therapist/edit/@Id" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition flex items-center shadow-md">
                    <i class="fas fa-edit mr-2"></i> Chỉnh Sửa
                </a>
                <a href="/staff/therapist/services/@Id" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition flex items-center shadow-md">
                    <i class="fas fa-list-alt mr-2"></i> Quản Lý Dịch Vụ
                </a>
            </div>
        </div>
        
        @if (isLoading)
        {
            <div class="flex flex-col items-center justify-center my-12 space-y-4">
                <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-pink-500"></div>
                <p class="text-gray-500">Đang tải thông tin chuyên viên...</p>
            </div>
        }
        else
        {
            <div class="bg-white rounded-xl shadow-xl overflow-hidden mb-10 transform transition-all hover:shadow-2xl">
                <div class="md:flex">
                    <!-- Therapist Profile Section -->
                    <div class="md:w-1/3 relative">
                        <div class="h-96 overflow-hidden">
                            <img src="@GetProfileImageUrl(therapist)" class="w-full h-full object-cover transition duration-300 hover:scale-105" alt="@($"{therapist?.FirstName} {therapist?.LastName}")">
                            <div class="absolute inset-0 bg-gradient-to-t from-pink-900/70 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300 flex items-end">
                                <div class="p-6 text-white">
                                    <p class="font-semibold text-lg">ID: @therapist?.Id</p>
                                </div>
                            </div>
                        </div>
                        <div class="p-6 bg-gradient-to-r from-pink-50 to-white">
                            <h3 class="text-2xl font-bold text-pink-700 mb-4 border-b border-pink-100 pb-3">@($"{therapist?.FirstName} {therapist?.LastName}")</h3>
                            <div class="space-y-4 text-gray-600">
                                <div class="flex items-center">
                                    <div class="w-10 h-10 rounded-full bg-pink-100 flex items-center justify-center flex-shrink-0">
                                        <i class="fas fa-calendar-alt text-pink-600"></i>
                                    </div>
                                    <div class="ml-4">
                                        <p class="text-gray-500 text-sm">Ngày bắt đầu</p>
                                        <p class="font-medium">@therapist?.HireDate.ToString("dd/MM/yyyy")</p>
                                    </div>
                                </div>
                                
                                <div class="flex items-center">
                                    <div class="w-10 h-10 rounded-full bg-pink-100 flex items-center justify-center flex-shrink-0">
                                        <i class="fas fa-briefcase text-pink-600"></i>
                                    </div>
                                    <div class="ml-4">
                                        <p class="text-gray-500 text-sm">Kinh nghiệm</p>
                                        <p class="font-medium">@(DateTime.Now.Year - therapist?.HireDate.Year) năm</p>
                                    </div>
                                </div>
                                
                                <div class="flex items-center">
                                    <div class="w-10 h-10 rounded-full bg-pink-100 flex items-center justify-center flex-shrink-0">
                                        <i class="fas fa-clock text-pink-600"></i>
                                    </div>
                                    <div class="ml-4">
                                        <p class="text-gray-500 text-sm">Giờ làm việc</p>
                                        <p class="font-medium">@therapist?.WorkStartTime.ToString(@"hh\:mm") - @therapist?.WorkEndTime.ToString(@"hh\:mm")</p>
                                    </div>
                                </div>
                                
                                <div class="flex items-center">
                                    <div class="w-10 h-10 rounded-full bg-pink-100 flex items-center justify-center flex-shrink-0">
                                        <i class="fas fa-check-circle text-pink-600"></i>
                                    </div>
                                    <div class="ml-4">
                                        <p class="text-gray-500 text-sm">Trạng thái</p>
                                        <p>
                                            <span class="@(therapist?.IsAvailable == true ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800") px-3 py-1 rounded-full text-xs font-medium">
                                                @(therapist?.IsAvailable == true ? "Có mặt" : "Không có mặt")
                                            </span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-100">
                                <h4 class="text-lg font-semibold text-gray-800 mb-2 flex items-center">
                                    <i class="fas fa-star text-yellow-400 mr-2"></i>
                                    Chuyên môn
                                </h4>
                                <p class="text-gray-700">@therapist?.Expertise</p>
                            </div>
                            
                            <div class="mt-6">
                                <h4 class="text-lg font-semibold text-gray-800 mb-2 flex items-center">
                                    <i class="fas fa-user-circle text-blue-500 mr-2"></i>
                                    Giới thiệu
                                </h4>
                                <p class="text-gray-700 leading-relaxed">@therapist?.Bio</p>
                            </div>
                        </div>
                    </div>

                    <!-- Services Section -->
                    <div class="md:w-2/3 p-6 bg-gradient-to-b from-white to-pink-50">
                        <h2 class="text-2xl font-bold text-pink-700 mb-6 pb-2 border-b border-pink-100 flex items-center">
                            <i class="fas fa-spa text-pink-500 mr-3"></i>
                            Dịch Vụ Đảm Nhận
                        </h2>
                        
                        @if (isLoadingServices)
                        {
                            <div class="flex justify-center my-8">
                                <div class="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-pink-500"></div>
                            </div>
                        }
                        else if (services != null && services.Any())
                        {
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                @foreach (var service in services)
                                {
                                    <div class="bg-white rounded-lg shadow-md hover:shadow-lg transition duration-300 overflow-hidden border border-pink-100 transform hover:-translate-y-1">
                                        <div class="p-5 relative">
                                            <div class="absolute top-0 right-0 mt-4 mr-4">
                                                <span class="px-2 py-1 bg-pink-100 text-pink-800 rounded-full text-xs font-medium">
                                                    @service.DurationMinutes phút
                                                </span>
                                            </div>
                                            
                                            <h5 class="text-lg font-semibold text-pink-600 mb-2 pr-20">@service.ServiceName</h5>
                                            <p class="text-gray-600 mb-4 text-sm">@service.Description</p>
                                            
                                            <div class="flex justify-between items-center pt-3 border-t border-gray-100">
                                                <div class="text-lg font-bold text-pink-600">
                                                    @FormatCurrency(service.Price)
                                                </div>
                                                <a href="/staff/services/detail/@service.Id" class="text-blue-500 hover:text-blue-700 text-sm flex items-center">
                                                    Chi tiết
                                                    <i class="fas fa-chevron-right ml-1 text-xs"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="mt-6 flex justify-center">
                                <a href="/staff/therapist/services/@Id" class="bg-pink-500 text-white px-6 py-2 rounded-lg shadow-md hover:bg-pink-600 transition flex items-center">
                                    <i class="fas fa-cog mr-2"></i> Quản lý dịch vụ
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="bg-blue-50 p-8 rounded-lg text-center border border-blue-100">
                                <div class="inline-block rounded-full bg-blue-100 p-3 mb-4">
                                    <i class="fas fa-info-circle text-blue-500 text-2xl"></i>
                                </div>
                                <p class="text-gray-700 mb-4">Chuyên viên này chưa được phân công dịch vụ nào.</p>
                                <a href="/staff/therapist/services/@Id" class="inline-block bg-pink-500 text-white px-4 py-2 rounded-lg hover:bg-pink-600 transition shadow-md">
                                    <i class="fas fa-plus-circle mr-2"></i>Thêm dịch vụ cho chuyên viên
                                </a>
                            </div>
                        }
                        
                        <!-- Appointment History Section -->
                        <div class="mt-10">
                            <h2 class="text-2xl font-bold text-pink-700 mb-6 pb-2 border-b border-pink-100 flex items-center">
                                <i class="fas fa-calendar-check text-pink-500 mr-3"></i>
                                Lịch Sử Lịch Hẹn
                            </h2>
                            
                            <div class="bg-gray-50 p-6 rounded-lg border border-gray-200">
                                <div class="flex items-center justify-center">
                                    <i class="fas fa-code text-gray-400 mr-2 text-lg"></i>
                                    <p class="text-gray-500 italic">Chức năng đang phát triển.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Actions Section -->
            <div class="flex justify-between mt-8">
                <button @onclick="GoBack" class="bg-gray-500 text-white px-5 py-1 rounded-lg hover:bg-gray-600 transition flex items-center shadow-md">
                    <i class="fas fa-arrow-left mr-2"></i> Quay Lại
                </button>
                
                <div class="flex p-4 gap-4">
                    <a href="/staff/therapist/edit/@Id" class="bg-blue-500 text-white px-5 py-2 rounded-lg hover:bg-blue-600 transition inline-flex items-center shadow-md">
                        <i class="fas fa-edit mr-2"></i> Chỉnh Sửa
                    </a>
                    <button @onclick="ConfirmDelete" class="bg-red-500 text-white px-5 py-2 rounded-lg hover:bg-red-600 transition flex items-center shadow-md">
                        <i class="fas fa-trash mr-2"></i> Xóa Chuyên Viên
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    private Therapist? therapist;
    private List<Service> services = new List<Service>();
    private bool isLoading = true;
    private bool isLoadingServices = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }
    
    private async Task LoadDataAsync()
    {
        try
        {
            isLoading = true;
            
            // Lấy thông tin therapist
            var therapistResult = await Task.Run(() => TherapistRepository.GetOne(Id));
            therapist = therapistResult;
            
            // Đánh dấu rằng therapist đã được tải
            isLoading = false;
            
            if (therapist != null)
            {
                isLoadingServices = true;
                
                // Lấy danh sách dịch vụ theo TherapistId (bất đồng bộ, tải riêng)
                services = await TherapistExpertiseRepository.GetServicesByTherapistIdAsync(Id);
                
                isLoadingServices = false;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading therapist details: {ex.Message}");
            // Fallback to mock data if needed
            await InitializeMockDataAsync();
        }
        finally
        {
            isLoading = false;
            isLoadingServices = false;
        }
    }

    private string GetProfileImageUrl(Therapist? therapist)
    {
        if (therapist == null || string.IsNullOrEmpty(therapist.ProfileImage))
        {
            // URL mặc định nếu không có hình
            return "https://images.unsplash.com/photo-1559839734-2b71ea197ec2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80";
        }
        
        string url = therapist.ProfileImage;
        
        // Nếu URL không chứa http hoặc https, thêm https://
        if (!url.StartsWith("http://") && !url.StartsWith("https://"))
        {
            url = "https://" + url;
        }
        
        return url;
    }
    
    private string FormatCurrency(decimal amount)
    {
        return string.Format("{0:#,##0} VNĐ", amount).Replace(",", ".");
    }

    private async Task InitializeMockDataAsync()
    {
        therapist = new Therapist
        {
            Id = Id,
            UserId = "user1",
            FirstName = "Hương",
            LastName = "Nguyễn",
            Bio = "Chuyên gia trong điều trị mụn và trẻ hóa da với hơn 8 năm kinh nghiệm. Chuyên trị các vấn đề về da và giúp khách hàng đạt được mục tiêu làn da mong muốn.",
            Expertise = "Điều Trị Mụn, Trẻ Hóa Da",
            HireDate = DateTime.Now.AddYears(-8),
            IsAvailable = true,
            ProfileImage = "https://images.unsplash.com/photo-1559839734-2b71ea197ec2",
            WorkStartTime = new TimeSpan(9, 0, 0),
            WorkEndTime = new TimeSpan(17, 0, 0)
        };

        await Task.Delay(500); // Simulate loading delay
        isLoading = false;

        services = new List<Service>
        {
            new Service
            {
                Id = "1",
                ServiceName = "Điều Trị Mụn",
                Description = "Điều trị mụn chuyên nghiệp sử dụng kỹ thuật và sản phẩm tiên tiến",
                DurationMinutes = 60,
                Price = 1200000m,
                IsActive = true
            },
            new Service
            {
                Id = "2",
                ServiceName = "Trẻ Hóa Da",
                Description = "Làm mới làn da của bạn với phương pháp trẻ hóa cao cấp",
                DurationMinutes = 90,
                Price = 1800000m,
                IsActive = true
            }
        };
        
        await Task.Delay(300); // Simulate service loading delay
        isLoadingServices = false;
    }
    
    private void GoBack()
    {
        NavigationManager.NavigateTo("/staff/therapist");
    }
    
    private async Task ConfirmDelete()
    {
        if (therapist == null) return;
        
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn có chắc chắn muốn xóa chuyên viên {therapist.FirstName} {therapist.LastName}?");
        
        if (confirmed)
        {
            await DeleteTherapist();
        }
    }
    
    private async Task DeleteTherapist()
    {
        try
        {
            // Thực hiện xóa therapist
            // await TherapistRepository.DeleteAsync(Id);
            
            await JSRuntime.InvokeVoidAsync("alert", "Đã xóa chuyên viên thành công!");
            NavigationManager.NavigateTo("/staff/therapist");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Lỗi khi xóa chuyên viên: {ex.Message}");
        }
    }
}