@page "/staff/therapist"
@using SkinCareBussinessObject
@using SkinCareRepository
@inject ITherapistRepository TherapistRepository

<PageTitle>Our Therapists</PageTitle>

<div class="bg-gradient-to-b from-white to-pink-50 min-h-screen py-8">
    <div class="container mx-auto px-4">
        <h1 class="text-4xl font-bold text-center text-pink-600 mb-10">Our Expert Therapists</h1>
        
        @if (isLoading)
        {
            <div class="flex justify-center my-12">
                <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-pink-500"></div>
            </div>
        }
        else
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                @foreach (var therapist in therapists)
                {
                    <div class="bg-white rounded-lg shadow-lg overflow-hidden transform transition duration-300 hover:scale-105 hover:shadow-xl">
                        <div class="h-64 overflow-hidden">
                            <img src="@GetImageUrl(therapist)" class="w-full h-full object-cover" alt="@($"{therapist.FirstName} {therapist.LastName}")">
                            <!-- For debugging: <p>URL: @therapist.ProfileImage</p> -->
                        </div>
                        <div class="p-6">
                            <h5 class="text-xl font-semibold text-pink-700 mb-2">Dr. @($"{therapist.FirstName} {therapist.LastName}")</h5>
                            <p class="text-gray-600 mb-4">@therapist.Bio</p>
                            <div class="flex justify-between items-center">
                                <a href="/staff/therapist/@therapist.Id" class="px-4 py-2 bg-pink-500 text-white rounded-lg hover:bg-pink-600 transition">View Profile</a>
                                <span class="@(therapist.IsAvailable ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800") px-3 py-1 rounded-full text-sm font-medium">
                                    @(therapist.IsAvailable ? "Available" : "Limited Availability")
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<Therapist> therapists = new List<Therapist>();
    private bool isLoading = true;

    protected override void OnInitialized()
    {
        LoadData();
    }

    private void LoadData()
    {
        try
        {
            isLoading = true;
            // Sử dụng Task.Result để chuyển từ bất đồng bộ sang đồng bộ
            therapists = TherapistRepository.GetAllAsync().Result;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading therapists: {ex.Message}");
            // Fallback to mock data if there's an error
            InitializeMockData();
        }
        finally
        {
            isLoading = false;
        }
    }

    private void InitializeMockData()
    {
    }

    // Phương thức xử lý URL hình ảnh
    private string GetImageUrl(Therapist therapist)
    {
        if (therapist == null || string.IsNullOrEmpty(therapist.ProfileImage))
        {
            // URL mặc định nếu không có hình
            return "https://images.unsplash.com/photo-1559839734-2b71ea197ec2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80";
        }
        
        string url = therapist.ProfileImage;
        
        // In URL gốc ra console để debug
        Console.WriteLine($"Original Profile Image URL: {url}");
        
        // Nếu URL không chứa http hoặc https, thêm https://
        if (!url.StartsWith("http://") && !url.StartsWith("https://"))
        {
            url = "https://" + url;
        }
        
        // In URL đã xử lý ra console để debug
        Console.WriteLine($"Processed Profile Image URL: {url}");
        
        return url;
    }
} 