@page "/staff/therapist/create"
@using SkinCareBussinessObject
@using SkinCareRepository
@inject ITherapistRepository TherapistRepository
@inject IUserRepository UserRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Thêm Chuyên Viên Mới | SkinCare Spa</PageTitle>

<div class="bg-gradient-to-b from-white to-pink-50 min-h-screen py-8">
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center mb-6">
            <div class="flex items-center">
                <button @onclick="GoBack" class="mr-4 text-gray-600 hover:text-pink-600 transition rounded-full hover:bg-white p-2">
                    <i class="fas fa-arrow-left text-xl"></i>
                </button>
                <h1 class="text-3xl font-bold text-pink-600">Thêm Chuyên Viên Mới</h1>
            </div>
        </div>
        
        <div class="bg-white rounded-xl shadow-md p-8 mb-8">
            <div class="max-w-3xl mx-auto">
                <form @onsubmit="HandleSubmit">
                    <!-- Thông tin tài khoản -->
                    <div class="mb-6">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center">
                            <i class="fas fa-user-circle text-pink-500 mr-2"></i>
                            Thông Tin Tài Khoản
                        </h2>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Email</label>
                                <input 
                                    type="email" 
                                    @bind="email" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                    placeholder="email@example.com"
                                />
                            </div>
                            
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Mật khẩu</label>
                                <input 
                                    type="password" 
                                    @bind="password" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                    placeholder="Nhập mật khẩu"
                                />
                            </div>
                        </div>
                    </div>

                    <!-- Thông tin cơ bản -->
                    <div class="mb-6">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center">
                            <i class="fas fa-user-circle text-pink-500 mr-2"></i>
                            Thông Tin Cơ Bản
                        </h2>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Họ</label>
                                <input 
                                    type="text" 
                                    @bind="therapist.FirstName" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                    placeholder="Nhập họ"
                                />
                            </div>

                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Tên</label>
                                <input 
                                    type="text" 
                                    @bind="therapist.LastName" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                    placeholder="Nhập tên"
                                />
                            </div>
                            
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Ngày bắt đầu</label>
                                <input 
                                    type="date" 
                                    @bind="therapist.HireDate" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                />
                            </div>
                            
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Trạng thái</label>
                                <select 
                                    @bind="therapist.IsAvailable" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                >
                                    <option value="true">Có mặt</option>
                                    <option value="false">Không có mặt</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Thông tin làm việc -->
                    <div class="mb-6">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center">
                            <i class="fas fa-briefcase text-pink-500 mr-2"></i>
                            Thông Tin Làm Việc
                        </h2>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Giờ bắt đầu</label>
                                <input 
                                    type="time" 
                                    value="@workStartTimeInput"
                                    @onchange="@(e => workStartTimeInput = e.Value.ToString())"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                />
                            </div>
                            
                            <div>
                                <label class="block text-gray-700 text-sm font-medium mb-2">Giờ kết thúc</label>
                                <input 
                                    type="time" 
                                    value="@workEndTimeInput"
                                    @onchange="@(e => workEndTimeInput = e.Value.ToString())"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    required
                                />
                            </div>
                            
                            <div class="md:col-span-2">
                                <label class="block text-gray-700 text-sm font-medium mb-2">Chuyên môn</label>
                                <input 
                                    type="text" 
                                    @bind="therapist.Expertise" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                    placeholder="Ví dụ: Điều trị mụn, Chăm sóc da, Massage trị liệu"
                                />
                            </div>
                        </div>
                    </div>
                    
                    <!-- Thông tin khác -->
                    <div class="mb-8">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center">
                            <i class="fas fa-info-circle text-pink-500 mr-2"></i>
                            Thông Tin Khác
                        </h2>
                        
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-medium mb-2">Mô tả tiểu sử</label>
                            <textarea 
                                @bind="therapist.Bio" 
                                rows="4" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                placeholder="Nhập thông tin mô tả về chuyên viên"
                            ></textarea>
                        </div>
                        
                        <div>
                            <label class="block text-gray-700 text-sm font-medium mb-2">URL Hình ảnh</label>
                            <input 
                                type="text" 
                                @bind="therapist.ProfileImage" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"
                                placeholder="Nhập URL hình ảnh"
                            />
                        </div>
                    </div>
                    
                    <!-- Nút hành động -->
                    <div class="flex justify-between pt-4 border-t border-gray-200">
                        <button 
                            type="button"
                            @onclick="GoBack"
                            class="px-6 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition shadow-md flex items-center"
                        >
                            <i class="fas fa-times mr-2"></i> Hủy
                        </button>
                        
                        <button 
                            type="submit"
                            class="px-6 py-2 bg-pink-500 text-white rounded-md hover:bg-pink-600 transition shadow-md flex items-center"
                        >
                            <i class="fas fa-plus-circle mr-2"></i> Thêm Chuyên Viên
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    private Therapist therapist = new Therapist
    {
        Id = Guid.NewGuid().ToString(),
        HireDate = DateTime.UtcNow.Date, // Use UTC date
        IsAvailable = true,
        WorkStartTime = new TimeSpan(9, 0, 0),
        WorkEndTime = new TimeSpan(17, 0, 0)
    };
    
    private string email = "";
    private string password = "";
    private string workStartTimeInput = "09:00";
    private string workEndTimeInput = "17:00";
    
    protected override void OnInitialized()
    {
        workStartTimeInput = therapist.WorkStartTime.ToString(@"hh\:mm");
        workEndTimeInput = therapist.WorkEndTime.ToString(@"hh\:mm");
    }
    
    private async Task HandleSubmit()
    {
        try
        {
            // Validate input
            if (string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(password))
            {
                await JSRuntime.InvokeVoidAsync("alert", "Email và mật khẩu không được để trống!");
                return;
            }

            if (string.IsNullOrWhiteSpace(therapist.FirstName) || string.IsNullOrWhiteSpace(therapist.LastName))
            {
                await JSRuntime.InvokeVoidAsync("alert", "Họ và tên không được để trống!");
                return;
            }

            // Parse time inputs
            if (TimeSpan.TryParse(workStartTimeInput, out TimeSpan startTime))
            {
                therapist.WorkStartTime = startTime;
            }
            
            if (TimeSpan.TryParse(workEndTimeInput, out TimeSpan endTime))
            {
                therapist.WorkEndTime = endTime;
            }
            
            // Check if the user email already exists
            var existingUser = UserRepository.GetUserByEmail(email);
            if (existingUser != null)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Email {email} đã tồn tại trong hệ thống. Vui lòng sử dụng email khác.");
                return;
            }
            
            // Create user object with UTC dates
            var user = new User
            {
                Id = Guid.NewGuid().ToString(),
                Email = email,
                Password = password, // In production, should hash this password
                Role = "therapist",
                Status = "Active",
                CreatedAt = DateTime.UtcNow
            };
            
            // Handle nullable fields with empty strings
            if (string.IsNullOrWhiteSpace(therapist.Bio))
                therapist.Bio = "";
                
            if (string.IsNullOrWhiteSpace(therapist.ProfileImage))
                therapist.ProfileImage = "";
                
            if (string.IsNullOrWhiteSpace(therapist.Expertise))
                therapist.Expertise = "";
            
            // Link user ID to therapist and ensure UTC date
            therapist.UserId = user.Id;
            therapist.HireDate = DateTime.SpecifyKind(therapist.HireDate, DateTimeKind.Utc);
            
            // Debug info
            Console.WriteLine($"Creating therapist: ID={therapist.Id}, Name={therapist.FirstName} {therapist.LastName}");
            Console.WriteLine($"IsAvailable: {therapist.IsAvailable}, HireDate: {therapist.HireDate} (Kind: {therapist.HireDate.Kind})");
            Console.WriteLine($"User: ID={user.Id}, Email={user.Email}, CreatedAt: {user.CreatedAt} (Kind: {user.CreatedAt.Kind})");
            
            // Add therapist with user in a single transaction through the repository
            TherapistRepository.Add(therapist, user);
            
            await JSRuntime.InvokeVoidAsync("alert", "Đã thêm chuyên viên thành công!");
            NavigationManager.NavigateTo("/staff/therapist");
        }
        catch (Exception ex)
        {
            var errorMessage = ex.Message;
            if (ex.InnerException != null)
            {
                errorMessage += $"\n\nDetails: {ex.InnerException.Message}";
            }
            
            await JSRuntime.InvokeVoidAsync("console.error", "Error creating therapist:", ex.Message, ex.StackTrace);
            if (ex.InnerException != null)
            {
                await JSRuntime.InvokeVoidAsync("console.error", "Inner exception:", ex.InnerException.Message, ex.InnerException.StackTrace);
            }
            
            await JSRuntime.InvokeVoidAsync("alert", $"Lỗi khi thêm chuyên viên: {errorMessage}");
        }
    }
    
    private void GoBack()
    {
        NavigationManager.NavigateTo("/staff/therapist");
    }
}