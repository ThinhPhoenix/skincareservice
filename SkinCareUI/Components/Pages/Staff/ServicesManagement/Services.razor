@page "/staff/services"
@using SkinCareBussinessObject
@using SkinCareRepository
@using System.Linq
@inject IServiceRepository ServiceRepository
@inject IServiceCategoryRepository CategoryRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="min-h-screen pt-8 pb-16">
    <div class="mx-auto px-4">
        <h3 class="text-3xl font-bold text-center text-pink-700 mb-8 drop-shadow-sm">Quản Lý Dịch Vụ</h3>

        @if (errorMessage != null)
        {
            <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg shadow-md mb-6 animate-fade-in">
                <div class="flex items-center">
                    <svg class="h-6 w-6 text-red-500 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                    <span>@errorMessage</span>
                </div>
            </div>
        }

        @if (serviceList == null)
        {
            <div class="bg-white rounded-xl shadow-md p-8 text-center">
                <div class="animate-pulse flex flex-col items-center">
                    <div class="rounded-full bg-pink-200 h-12 w-12 flex items-center justify-center mb-4">
                        <svg class="animate-spin h-6 w-6 text-pink-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </div>
                    <p class="text-gray-600 font-medium">Đang tải dữ liệu...</p>
                </div>
            </div>
        }
        else
        {
            <div class="bg-white rounded-2xl shadow-xl overflow-hidden mb-8">
                <div class="bg-gradient-to-r from-pink-500 to-pink-600 py-4 px-6">
                    <h4 class="text-white text-xl font-medium">Danh Sách Dịch Vụ</h4>
                </div>
                
                <div class="p-6">
                    <div class="flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0 mb-6">
                        <div class="flex flex-col md:flex-row space-y-3 md:space-y-0 md:space-x-4 items-start md:items-center">
                            <div class="relative w-full md:w-auto">
                                <input type="text" 
                                    class="pl-10 pr-4 py-2.5 w-full md:w-80 border rounded-lg focus:ring-pink-500 focus:border-pink-500 transition-all duration-200" 
                                    placeholder="Tìm kiếm dịch vụ..." 
                                    @bind="searchKeyword" 
                                    @bind:event="oninput" 
                                    @onkeyup="HandleSearchKeyUp" />
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                            </div>
                            
                            <div class="flex space-x-2">
                                <button class="bg-gradient-to-r from-pink-500 to-pink-600 hover:from-pink-600 hover:to-pink-700 text-white px-4 py-2 rounded-lg shadow-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2"
                                        @onclick="SearchServices">
                                    <span class="flex items-center">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                        </svg>
                                        Tìm kiếm
                                    </span>
                                </button>
                                <button class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg shadow-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2"
                                        @onclick="ResetSearch">
                                    <span class="flex items-center">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                                        </svg>
                                        Làm mới
                                    </span>
                                </button>
                            </div>
                        </div>

                        <button class="bg-gradient-to-r from-pink-500 to-pink-600 hover:from-pink-600 hover:to-pink-700 text-white px-5 py-2.5 rounded-lg shadow-md transition-all duration-200 font-medium focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2" 
                                @onclick="AddNewService">
                            <span class="flex items-center">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                </svg>
                                Thêm Dịch Vụ Mới
                            </span>
                        </button>
                    </div>

                    <div class="overflow-hidden rounded-xl border border-gray-200 shadow-sm">
                        <table class="w-full border-collapse bg-white text-sm">
                            <thead class="bg-gradient-to-r from-pink-50 to-pink-100 text-gray-700 uppercase">
                                <tr>
                                    <th class="px-4 py-3 text-left font-semibold">Tên Dịch Vụ</th>
                                    <th class="px-4 py-3 text-left font-semibold">Danh Mục</th>
                                    <th class="px-4 py-3 text-left font-semibold hidden md:table-cell">Mô Tả</th>
                                    <th class="px-4 py-3 text-right font-semibold">Giá</th>
                                    <th class="px-4 py-3 text-center font-semibold hidden sm:table-cell">Thời Gian</th>
                                    <th class="px-4 py-3 text-center font-semibold">Trạng Thái</th>
                                    <th class="px-4 py-3 text-center font-semibold">Thao Tác</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y">
                                @foreach (var service in displayedServices ?? Enumerable.Empty<Service>())
                                {
                                    <tr class="hover:bg-pink-50 transition-colors duration-150">
                                        <td class="px-4 py-3 font-medium text-gray-900">@service.ServiceName</td>
                                        <td class="px-4 py-3 text-gray-700">@(service.ServiceCategory?.CategoryName ?? "N/A")</td>
                                        <td class="px-4 py-3 text-gray-600 truncate max-w-xs hidden md:table-cell">@(string.IsNullOrEmpty(service.Description) ? "N/A" : service.Description)</td>
                                        <td class="px-4 py-3 text-right font-medium text-gray-900">@service.Price.ToString("N0")₫</td>
                                        <td class="px-4 py-3 text-center text-gray-700 hidden sm:table-cell">@service.DurationMinutes phút</td>
                                        <td class="px-4 py-3 text-center">
                                            <span class="px-2 py-1 text-xs font-semibold rounded-full @(service.IsActive ? "bg-green-100 text-green-700" : "bg-red-100 text-red-700")">
                                                @(service.IsActive ? "Kích hoạt" : "Vô hiệu")
                                            </span>
                                        </td>
                                        <td class="px-4 py-3 text-center">
                                            <div class="flex justify-center space-x-2">
                                                <button class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-md transition-colors duration-200" 
                                                        @onclick="() => EditService(service.Id)">
                                                    <span class="flex items-center">
                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                                        </svg>
                                                    </span>
                                                </button>
                                                <button class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md transition-colors duration-200" 
                                                        @onclick="() => ShowDeleteConfirm(service.Id, service.ServiceName)">
                                                    <span class="flex items-center">
                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                        </svg>
                                                    </span>
                                                </button>
                                                <button class="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded-md transition-colors duration-200" 
                                                        @onclick="() => ViewServiceDetails(service.Id)">
                                                    <span class="flex items-center">
                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                                        </svg>
                                                    </span>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (displayedServices?.Any() != true)
                    {
                        <div class="text-center my-12 text-gray-500">
                            <svg class="mx-auto h-12 w-12 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <p class="text-lg font-medium">Không tìm thấy dịch vụ nào phù hợp.</p>
                            <p class="text-sm text-gray-500 mt-1">Vui lòng thử lại với từ khóa khác.</p>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@if (showDeleteConfirm)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 animate-fade-in">
        <div class="bg-white rounded-xl p-6 max-w-md w-full shadow-2xl transform transition-all">
            <div class="text-center mb-4">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4">
                    <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                    </svg>
                </div>
                <h3 class="text-lg font-semibold text-gray-900">Xác nhận xóa</h3>
                <p class="text-gray-600 mt-2">Bạn có chắc chắn muốn xóa dịch vụ <span class="font-medium text-gray-800">"@serviceNameToDelete"</span>?</p>
                <p class="text-sm text-red-500 mt-3">Lưu ý: Hành động này không thể hoàn tác.</p>
            </div>
            <div class="flex justify-center space-x-4 mt-6">
                <button class="px-5 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-all duration-200 font-medium"
                        @onclick="CloseDeleteConfirm">
                    Hủy bỏ
                </button>
                <button class="px-5 py-2 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-lg hover:from-red-600 hover:to-red-700 transition-all duration-200 font-medium"
                        @onclick="ConfirmDelete">
                    Xác nhận xóa
                </button>
            </div>
        </div>
    </div>
}

<style>
    .animate-fade-in {
        animation: fadeIn 0.5s ease-in-out;
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

@code {
    private List<Service>? serviceList;
    private List<Service>? displayedServices;
    private string searchKeyword = "";
    private string? errorMessage;
    private System.Threading.Timer? searchTimer;
    private bool showDeleteConfirm = false;
    private string serviceIdToDelete = "";
    private string serviceNameToDelete = "";

    protected override void OnInitialized()
    {
        try
        {
            LoadServices();
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải dịch vụ: {ex.Message}";
        }
    }

    protected override void OnParametersSet()
    {
        try
        {
            LoadServices();
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải dịch vụ: {ex.Message}";
        }
    }

    private void LoadServices()
    {
        serviceList = ServiceRepository.GetAll();
        displayedServices = serviceList;

        foreach (var service in serviceList ?? Enumerable.Empty<Service>())
        {
            if (service.CategoryId != null && service.ServiceCategory == null)
            {
                service.ServiceCategory = CategoryRepository.GetOne(service.CategoryId);
            }
        }
    }

    private void ShowDeleteConfirm(string id, string serviceName)
    {
        serviceIdToDelete = id;
        serviceNameToDelete = serviceName;
        showDeleteConfirm = true;
    }

    private void CloseDeleteConfirm()
    {
        showDeleteConfirm = false;
        serviceIdToDelete = "";
        serviceNameToDelete = "";
    }

    private void ConfirmDelete()
    {
        try
        {
            ServiceRepository.Delete(serviceIdToDelete);
            serviceList?.RemoveAll(s => s.Id == serviceIdToDelete);
            displayedServices = new List<Service>(displayedServices?.Where(s => s.Id != serviceIdToDelete) ?? Enumerable.Empty<Service>());
            
            // Đóng hộp thoại
            CloseDeleteConfirm();
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi xóa dịch vụ: {ex.Message}";
            CloseDeleteConfirm();
        }
    }

    private void SearchServices()
    {
        try
        {
            errorMessage = null;
            
            if (string.IsNullOrWhiteSpace(searchKeyword))
            {
                displayedServices = serviceList;
                return;
            }

            displayedServices = ServiceRepository.Search(searchKeyword);
            
            // Cập nhật thông tin danh mục
            foreach (var service in displayedServices ?? Enumerable.Empty<Service>())
            {
                if (service.CategoryId != null && service.ServiceCategory == null)
                {
                    service.ServiceCategory = CategoryRepository.GetOne(service.CategoryId);
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tìm kiếm dịch vụ: {ex.Message}";
        }
    }

    private void HandleSearchKeyUp(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            SearchServices();
        }
        
        // Debounce search
        searchTimer?.Dispose();
        searchTimer = new System.Threading.Timer(_ =>
        {
            InvokeAsync(() =>
            {
                if (searchKeyword.Length >= 2)
                {
                    SearchServices();
                    StateHasChanged();
                }
            });
        }, null, 500, Timeout.Infinite);
    }

    private void ResetSearch()
    {
        searchKeyword = "";
        displayedServices = serviceList;
        errorMessage = null;
    }

    private void AddNewService()
    {
        NavigationManager.NavigateTo("staff/services/add");
    }

    private void EditService(string id)
    {
        NavigationManager.NavigateTo("staff/services/edit/" + id);
    }

    private void ViewServiceDetails(string id)
    {
        NavigationManager.NavigateTo("staff/services/details/" + id);
    }
}