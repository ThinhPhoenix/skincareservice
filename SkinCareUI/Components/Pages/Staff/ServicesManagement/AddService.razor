@page "/staff/services/add"
@using SkinCareBussinessObject
@using SkinCareRepository
@inject IServiceRepository ServiceRepository
@inject IServiceCategoryRepository CategoryRepository
@inject NavigationManager NavigationManager

<div class="bg-gradient-to-b from-pink-100 to-white min-h-screen pt-8 pb-16">
    <div class="max-w-4xl mx-auto px-4">
        <h3 class="text-3xl font-bold text-center text-pink-700 mb-8 drop-shadow-sm">Thêm Dịch Vụ Mới</h3>

        @if (errorMessage != null)
        {
            <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg shadow-md mb-6 animate-fade-in">
                <div class="flex items-center">
                    <svg class="h-6 w-6 text-red-500 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                    <span>@errorMessage</span>
                </div>
            </div>
        }

        <div class="bg-white rounded-2xl shadow-xl overflow-hidden transition-all duration-300 hover:shadow-2xl">
            <div class="bg-gradient-to-r from-pink-500 to-pink-600 py-4 px-6">
                <h4 class="text-white text-xl font-medium">Thông Tin Dịch Vụ</h4>
            </div>
            
            <div class="p-8 space-y-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Tên Dịch Vụ<span class="text-red-500">*</span></label>
                        <input type="text" class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 transition-all duration-200 ease-in-out" 
                               placeholder="Nhập tên dịch vụ" @bind="newService.ServiceName" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Danh Mục<span class="text-red-500">*</span></label>
                        <div class="relative">
                            <select class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 appearance-none transition-all duration-200 ease-in-out" 
                                    @bind="newService.CategoryId">
                                <option value="">-- Chọn danh mục --</option>
                                @foreach (var category in categoryList)
                                {
                                    <option value="@category.Id">@category.CategoryName</option>
                                }
                            </select>
                            <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-500">
                                <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                                </svg>
                            </div>
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Trạng Thái</label>
                        <div class="flex items-center h-full pt-2">
                            <label class="relative inline-flex items-center cursor-pointer">
                                <input type="checkbox" class="sr-only peer" @bind="newService.IsActive">
                                <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-300 rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-500"></div>
                                <span class="ml-3 text-sm font-medium text-gray-700">
                                    @(newService.IsActive ? "Kích hoạt" : "Vô hiệu hóa")
                                </span>
                            </label>
                        </div>
                    </div>

                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Mô Tả</label>
                        <textarea class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 resize-none h-24 transition-all duration-200 ease-in-out" 
                                  placeholder="Nhập mô tả dịch vụ" @bind="newService.Description"></textarea>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Giá (VNĐ)<span class="text-red-500">*</span></label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <span class="text-gray-500">₫</span>
                            </div>
                            <input type="number" step="1000" min="0" 
                                   class="block w-full pl-8 rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 transition-all duration-200 ease-in-out" 
                                   placeholder="0" @bind="newService.Price" />
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Thời Gian (phút)<span class="text-red-500">*</span></label>
                        <div class="relative">
                            <input type="number" min="0" 
                                   class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 transition-all duration-200 ease-in-out" 
                                   placeholder="Thời gian thực hiện (phút)" @bind="newService.DurationMinutes" />
                            <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                                <span class="text-gray-500">phút</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Yêu Cầu Trước Khi Sử Dụng</label>
                        <textarea class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 resize-none h-20 transition-all duration-200 ease-in-out" 
                                  placeholder="Những điều khách hàng cần làm trước khi sử dụng dịch vụ" @bind="newService.Prerequisites"></textarea>
                    </div>

                    <div class="col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Hướng Dẫn Chăm Sóc Sau</label>
                        <textarea class="block w-full rounded-lg border-gray-300 shadow-sm focus:ring-pink-500 focus:border-pink-500 px-4 py-3 resize-none h-20 transition-all duration-200 ease-in-out" 
                                  placeholder="Những điều khách hàng cần làm sau khi sử dụng dịch vụ" @bind="newService.Aftercare"></textarea>
                    </div>
                </div>

                <div class="pt-4 border-t border-gray-200 mt-8">
                    <div class="flex justify-end space-x-3">
                        <button class="px-6 py-2.5 rounded-lg border border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-400 shadow-sm transition-all duration-200 ease-in-out font-medium" 
                                @onclick="Cancel">
                            Hủy Bỏ
                        </button>
                        <button class="px-6 py-2.5 rounded-lg bg-gradient-to-r from-pink-500 to-pink-600 text-white hover:from-pink-600 hover:to-pink-700 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 shadow-md transition-all duration-200 ease-in-out font-medium" 
                                @onclick="SaveService">
                            <span class="flex items-center">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                Lưu Dịch Vụ
                            </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .animate-fade-in {
        animation: fadeIn 0.5s ease-in-out;
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

@code {
    private Service newService = new Service();
    private List<ServiceCategory> categoryList;
    private string errorMessage;

    protected override void OnInitialized()
    {
        try
        {
            // Khởi tạo dịch vụ mới với giá trị mặc định
            newService = new Service
            {
                Id = null,
                ServiceName = "",
                Description = "",
                Price = 0, // Giá trị mặc định
                DurationMinutes = 0, // Giá trị mặc định
                IsActive = true, // Mặc định là active
                CategoryId = "",
                ServiceCategory = null,
                Prerequisites = "",
                Aftercare = ""
            };
            
            // Lấy danh sách danh mục
            categoryList = CategoryRepository.GetAll();
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải danh mục: {ex.Message}";
        }
    }

    private void SaveService()
    {
        try
        {
            // Kiểm tra đầu vào
            if (string.IsNullOrWhiteSpace(newService.ServiceName))
            {
                errorMessage = "Tên dịch vụ không được để trống";
                return;
            }

            if (string.IsNullOrWhiteSpace(newService.CategoryId))
            {
                errorMessage = "Vui lòng chọn danh mục";
                return;
            }

            if (newService.Price <= 0)
            {
                errorMessage = "Giá dịch vụ phải lớn hơn 0";
                return;
            }

            if (newService.DurationMinutes <= 0)
            {
                errorMessage = "Thời gian dịch vụ phải lớn hơn 0 phút";
                return;
            }

            // Tạo mới một đối tượng Service, thay vì sử dụng đối tượng ràng buộc dữ liệu
            Service serviceToAdd = new Service
            {
                ServiceName = newService.ServiceName.Trim(),
                Description = newService.Description?.Trim() ?? string.Empty,
                Price = newService.Price,
                DurationMinutes = newService.DurationMinutes,
                IsActive = newService.IsActive,
                CategoryId = newService.CategoryId.Trim(),
                Prerequisites = newService.Prerequisites?.Trim() ?? string.Empty,
                Aftercare = newService.Aftercare?.Trim() ?? string.Empty
            };

            // Debug thông tin
            Console.WriteLine($"Debug - Thêm dịch vụ với CategoryId: {serviceToAdd.CategoryId}");
            
            // Lưu
            ServiceRepository.Add(serviceToAdd);
            NavigationManager.NavigateTo("/staff/services");
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi lưu dịch vụ: {ex.Message}";
            
            if (ex.InnerException != null)
            {
                errorMessage += $" - Chi tiết: {ex.InnerException.Message}";
                
                // Debug thêm thông tin chi tiết
                Console.WriteLine($"Chi tiết lỗi: {ex}");
                Console.WriteLine($"Chi tiết ngoại lệ bên trong: {ex.InnerException}");
            }
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/staff/services");
    }
}