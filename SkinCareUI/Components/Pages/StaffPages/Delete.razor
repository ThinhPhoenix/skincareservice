@page "/staff/delete"
@using SkinCareBussinessObject
@using SkinCareRepository
@inject IStaffRepository StaffRepository
@inject NavigationManager NavigationManager

<h1>Delete Staff</h1>

<h3>Are you sure you want to delete this staff member?</h3>

@if (staff != null)
{
    <dl class="row">
        <dt class="col-sm-2">First Name</dt>
        <dd class="col-sm-10">@staff.FirstName</dd>
        <dt class="col-sm-2">Last Name</dt>
        <dd class="col-sm-10">@staff.LastName</dd>
        <dt class="col-sm-2">Role</dt>
        <dd class="col-sm-10">@staff.Role</dd>
        <dt class="col-sm-2">HireDate</dt>
        <dd class="col-sm-10">@staff.HireDate.ToString("MM/dd/yyyy")</dd>
        <dt class="col-sm-2">IsManager</dt>
        <dd class="col-sm-10">@staff.IsManager</dd>
    </dl>

    <form @onsubmit="DeleteConfirmed">
        <button type="submit" class="btn btn-danger">Delete</button>
        <a href="/staff" class="btn btn-secondary ml-2">Back to List</a>
    </form>
}

@code {
    private Staff? staff;

    [SupplyParameterFromQuery]
    private string Id { get; set; }

    protected override void OnInitialized()
    {
        staff = StaffRepository.GetOne(Id);

        if (staff is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private void DeleteConfirmed()
    {
        try
        {
            StaffRepository.Delete(Id);
            NavigationManager.NavigateTo("/staff");
        }
        catch (Exception)
        {
            // Handle exception
        }
    }
}