@page "/admin/dashboard"
@using SkinCareRepository
@using SkinCareBussinessObject
@using System.Linq
@inject IAppointmentRepository AppointmentRepository
@inject IPaymentRepository PaymentRepository
@inject ICustomerRepository CustomerRepository
@inject IJSRuntime JSRuntime

<PageTitle>Bảng Điều Khiển Quản Trị</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h3>Bảng Điều Khiển</h3>
    <div class="d-flex align-items-center">
        <div class="input-group me-2" style="width: 150px;">
            <input type="number" class="form-control" @bind="selectedYear" min="2000" max="2100" />
        </div>
        <button class="btn btn-primary" @onclick="LoadDataForYear">Tải Dữ Liệu</button>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Tổng Số Khách Hàng</h5>
                <h1 class="text-primary">@totalCustomers</h1>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Tổng Số Cuộc Hẹn</h5>
                <h1 class="text-info">@totalAppointments</h1>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
            <h5 class="card-title">Tổng Doanh Thu</h5>
            <h1 class="text-success">@totalRevenue.ToString("#,##0") VNĐ</h1>
        </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Khách Hàng Theo Tháng (@selectedYear)</h5>
                <div>
                    <canvas id="customersChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Cuộc Hẹn Theo Tháng (@selectedYear)</h5>
                <div>
                    <canvas id="appointmentsChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Doanh Thu Theo Tháng (@selectedYear)</h5>
                <div>
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private int[] monthlyCustomers = new int[12];
    private int[] monthlyAppointments = new int[12];
    private decimal[] monthlyRevenue = new decimal[12];
    private int totalCustomers;
    private int totalAppointments;
    private decimal totalRevenue;
    private int selectedYear = DateTime.Now.Year;
    private string[] months = { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" };
    private bool dataLoaded = false;
    private bool chartsInitialized = false;

    protected override async Task OnInitializedAsync()
    {
        // Chỉ tải dữ liệu, không tương tác với JavaScript
        await FetchDataForYear();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (dataLoaded)
        {
            // Xóa biểu đồ hiện có nếu chúng tồn tại (chỉ khi không phải lần hiển thị đầu tiên)
            if (!firstRender && chartsInitialized)
            {
                await JSRuntime.InvokeVoidAsync("clearCharts");
            }

            // Khởi tạo biểu đồ với dữ liệu đã tải
            await InitializeChartsAsync();
            dataLoaded = false;
            chartsInitialized = true;
        }
    }

    private async Task LoadDataForYear()
    {
        // Chỉ tải dữ liệu, chưa tương tác với JavaScript
        await FetchDataForYear();
        
        // Kích hoạt hiển thị lại, sau đó OnAfterRenderAsync sẽ được gọi
        StateHasChanged();
    }

    private async Task FetchDataForYear()
    {
        // Lấy dữ liệu cho năm đã chọn
        monthlyCustomers = CustomerRepository.GetDashBoardCustomer(selectedYear);
        monthlyAppointments = AppointmentRepository.GetDashBoardAppointment(selectedYear);
        monthlyRevenue = PaymentRepository.GetDashBoardRevenue(selectedYear);

        // Tính tổng
        totalCustomers = monthlyCustomers.Sum();
        totalAppointments = monthlyAppointments.Sum();
        totalRevenue = monthlyRevenue.Sum();

        // Đánh dấu dữ liệu đã được tải để biểu đồ có thể được khởi tạo trong OnAfterRenderAsync
        dataLoaded = true;
    }

    private async Task InitializeChartsAsync()
    {
        await JSRuntime.InvokeVoidAsync("initializeCharts", 
            months, 
            monthlyCustomers,
            monthlyAppointments,
            monthlyRevenue);
    }
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    let customerChart = null;
    let appointmentChart = null;
    let revenueChart = null;

    window.clearCharts = () => {
        if (customerChart) customerChart.destroy();
        if (appointmentChart) appointmentChart.destroy();
        if (revenueChart) revenueChart.destroy();
    };

    window.initializeCharts = (months, customerData, appointmentData, revenueData) => {
        // Biểu đồ Khách Hàng
        const customersCtx = document.getElementById('customersChart');
        customerChart = new Chart(customersCtx, {
            type: 'line',
            data: {
                labels: months,
                datasets: [{
                    label: 'Khách Hàng Mới',
                    data: customerData,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });

        // Biểu đồ Cuộc Hẹn
        const appointmentsCtx = document.getElementById('appointmentsChart');
        appointmentChart = new Chart(appointmentsCtx, {
            type: 'line',
            data: {
                labels: months,
                datasets: [{
                    label: 'Cuộc Hẹn',
                    data: appointmentData,
                    borderColor: 'rgb(54, 162, 235)',
                    tension: 0.1,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });

        // Biểu đồ Doanh Thu
        const revenueCtx = document.getElementById('revenueChart');
        revenueChart = new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: months,
                datasets: [{
                    label: 'Doanh Thu (VNĐ)',
                    data: revenueData,
                    borderColor: 'rgb(255, 99, 132)',
                    tension: 0.1,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    };
</script>